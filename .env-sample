#!/usr/bin/env bash

# set -euo pipefail
source utility.sh

# Run ./check-prereqs.sh and if it fails then return 1
./check-prereqs.sh || return 1

export ARTIFACTS_DIR="$(pwd)/artifacts"
mkdir -p $ARTIFACTS_DIR

export AZURE_RESOURCE_GROUP=""

# Figure out which region has the machine availability by running ./find-region-machine-map.sh
export AZURE_REGION="northeurope"
export AZURE_INSTANCE_SIZE=Standard_DC2as_v5
export CLUSTER_NAME="caa-aks"
export AKS_WORKER_NODE_SIZE="Standard_F4s_v2"
export AKS_WORKER_USER_NAME="azuser"

# CAA specific env vars
export CAA_IMAGE="quay.io/confidential-containers/cloud-api-adaptor"
export CAA_VERSION="0.9.0"
export CAA_TAG="v0.9.0-amd64"
export COCO_OPERATOR_VERSION="0.9.0"
export AZURE_WORKLOAD_IDENTITY_NAME="caa-identity"

# Contaainer image encryption
export COCO_KEY_PROVIDER="quay.io/surajd/coco-key-provider:v0.9.0"
export ENCRYPTION_KEY_FILE="artifacts/encryption-key"
export ENCRYPTION_KEY_ID="/encrypted_containers/nginx/key"
export SOURCE_IMAGE="nginx:latest"
export DESTINATION_IMAGE=""

# KBS specific env vars
export KBS_VERSION="e890fc90c384207668fa3a4d6a2f2a2d652797ee"
export KBS_IMAGE="ghcr.io/confidential-containers/staged-images/kbs:e890fc90c384207668fa3a4d6a2f2a2d652797ee"

# Check if any of the above variables are empty
function check_env_vars() {
    for var in "$@"; do
        if [ -z "${!var}" ]; then
            error "$var is not set"
            # Set the exit code to be non-zero without exiting the script
            return 1
        fi
    done
}

check_env_vars ARTIFACTS_DIR AZURE_RESOURCE_GROUP AZURE_REGION AZURE_INSTANCE_SIZE CLUSTER_NAME AKS_WORKER_NODE_SIZE AKS_WORKER_USER_NAME CAA_IMAGE CAA_VERSION CAA_TAG COCO_OPERATOR_VERSION AZURE_WORKLOAD_IDENTITY_NAME COCO_KEY_PROVIDER ENCRYPTION_KEY_FILE ENCRYPTION_KEY_ID SOURCE_IMAGE DESTINATION_IMAGE KBS_VERSION KBS_IMAGE
